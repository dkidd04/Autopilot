/*
 * InputTemplatePanel.java
 *
 * Created on July 30, 2008, 3:37 PM
 */

package com.citigroup.liquifi.autopilot.gui;

import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import com.citigroup.liquifi.AutoPilotAppl;
import com.citigroup.liquifi.autopilot.bootstrap.ApplicationContext;
import com.citigroup.liquifi.autopilot.db.CommonOverwriteTagManager;
import com.citigroup.liquifi.autopilot.gui.model.CommonTagTableModel;
import com.citigroup.liquifi.entities.LFCommonOverwriteTag;
import com.citigroup.liquifi.util.AutoPilotConstants;
import com.citigroup.liquifi.util.DBUtil;

public class InputCommonOverwriteTagPanel extends javax.swing.JPanel implements TableModelListener{
	private static final long serialVersionUID = 1L;
	/** Creates new form InputTemplatePanel */
	public InputCommonOverwriteTagPanel() {
		
		commonTagTableModel = ApplicationContext.getCommonTagTableModel();

		initDBData();
		initComponents();
		setEditable(false);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveDialog = new javax.swing.JDialog();
        msgLabel = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        AppNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        commonTagListNameTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        commonTagListComboBox = new javax.swing.JComboBox();
        editButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        commonTagTable = new javax.swing.JTable();
        addRowButton3 = new javax.swing.JButton();
        deleteRowButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        saveDialog.setName("saveDialog"); // NOI18N

        msgLabel.setText("Save Successful. Entry added to Database.");
        msgLabel.setName("msgLabel"); // NOI18N

        okButton.setText("OK");
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout saveDialogLayout = new javax.swing.GroupLayout(saveDialog.getContentPane());
        saveDialog.getContentPane().setLayout(saveDialogLayout);
        saveDialogLayout.setHorizontalGroup(
            saveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveDialogLayout.createSequentialGroup()
                .addGroup(saveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(saveDialogLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(msgLabel))
                    .addGroup(saveDialogLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(okButton)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        saveDialogLayout.setVerticalGroup(
            saveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(saveDialogLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(msgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(okButton)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        setName("Form"); // NOI18N

        jLabel1.setText("AppName");
        jLabel1.setName("jLabel1"); // NOI18N

        AppNameTextField.setName("AppNameTextField"); // NOI18N

        jLabel2.setText("CommonTagListName");
        jLabel2.setName("jLabel2"); // NOI18N

        commonTagListNameTextField.setName("CommonTagListNameTextField"); // NOI18N

        saveButton.setText("Save");
        saveButton.setName("saveButton"); // NOI18N
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.setName("clearButton"); // NOI18N
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jSeparator1.setName("jSeparator1"); // NOI18N

        jLabel6.setText("CommonTagList");
        jLabel6.setName("jLabel6"); // NOI18N

        commonTagListComboBox.setModel(new javax.swing.DefaultComboBoxModel((String[]) commonOverwriteTagMap.keySet().toArray(new String[commonOverwriteTagMap.keySet().size()])));
        commonTagListComboBox.setName("CommonTagListComboBox");
        commonTagListComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commonTagListComboBoxActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.setName("editButton"); // NOI18N
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        commonTagTable.setModel(commonTagTableModel);
        commonTagTable.setName("commonTagTable"); // NOI18N
        commonTagTable.getModel().addTableModelListener(this);
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel> (commonTagTable.getModel());
        commonTagTable.setRowSorter(sorter);
        jScrollPane3.setViewportView(commonTagTable);

        addRowButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citigroup/liquifi/autopilot/gui/resources/icons/window_new-32.png"))); // NOI18N
        addRowButton3.setName("addRowButton3"); // NOI18N
        addRowButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowButton3ActionPerformed(evt);
            }
        });

        deleteRowButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/citigroup/liquifi/autopilot/gui/resources/icons/view_remove-32.png"))); // NOI18N
        deleteRowButton3.setName("deleteRowButton3"); // NOI18N
        deleteRowButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("CommonTagList");
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(commonTagListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editButton))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(361, 361, 361)
                        .addComponent(saveButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(commonTagListNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AppNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(addRowButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteRowButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 583, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commonTagListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editButton)
                    .addComponent(jLabel6))
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(AppNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(commonTagListNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addRowButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteRowButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                        .addGap(153, 153, 153)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveButton)
                            .addComponent(clearButton))
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents


	public void initDBData(){
		//templateMap = DBUtil.getInstance().getTem().getAllTemplateMap();
		commonOverwriteTagMap = DBUtil.getInstance().getCom().getCommonOverwriteTagMap();
	}

	private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {
		CommonOverwriteTagManager comLocal = DBUtil.getInstance().getCom();
		try{
			boolean valid = validate(AppNameTextField.getText(), commonTagListNameTextField.getText());

			if (valid){
				Set<LFCommonOverwriteTag> setLocal =  commonTagTableModel.getDataSet();
				
				
				Boolean isCommonTagListNameExist = commonOverwriteTagMap.containsKey(commonTagListNameTextField.getText());
				
				if (isCommonTagListNameExist) {
					List <LFCommonOverwriteTag> listLocal = commonOverwriteTagMap.get(commonTagListNameTextField.getText());					
					for (LFCommonOverwriteTag tagLocal : listLocal) {
						//setTagID.add(tagLocal.getTagID());
						comLocal.deleteTag(tagLocal);
					}
				}
				
				for (LFCommonOverwriteTag tagLocal : setLocal) {
					tagLocal.setAppName(AppNameTextField.getText());
					tagLocal.setCommonOverwriteTagListName(commonTagListNameTextField.getText());
					comLocal.saveTag(tagLocal);
				}
				//to check
				
				comLocal.commit();
				
				msgLabel.setText("Saved to Database successfully!");
				AutoPilotAppl.getApplication().show(saveDialog);

				clear();
				refreshFromDB();
			}else{
				msgLabel.setText("Required Fields are not Populated");
				AutoPilotAppl.getApplication().show(saveDialog);

			}
		}catch(Exception e){
			e.printStackTrace();
			msgLabel.setText(saveFailMsg);
			comLocal.rollback();
			AutoPilotAppl.getApplication().show(saveDialog);
		}

	}

	private boolean validate(String appName, String templateName) {
		if(appName == null || appName.equals("") || templateName == null || templateName.equals("")){
			return false;
		}
		return true;
	}

	public  void clear() {
		clearButtonActionPerformed(null);
	}

	private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
		AppNameTextField.setText("");
		commonTagListNameTextField.setText("");
		
        commonTagListComboBox.setSelectedItem(AutoPilotConstants.ComboBoxEmptyItem);
        
		commonTagTableModel.getData().clear();
		//commonTagTableModel.setData(new LinkedHashSet<LFCommonOverwriteTag>());
	}//GEN-LAST:event_clearButtonActionPerformed

private void addRowButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowButton1ActionPerformed
// TODO add your handling code here:
	commonTagTableModel.addEmptyRow();
}//GEN-LAST:event_addRowButton1ActionPerformed

private void deleteRowButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowButton1ActionPerformed
	if (commonTagTable.getSelectedRow() != -1){
		commonTagTableModel.removeRow(commonTagTable.getSelectedRow());
	}
// TODO add your handling code here:
}//GEN-LAST:event_deleteRowButton1ActionPerformed

	private void commonTagListComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
		setEditable(false);
		
//		LFTemplate template = templateMap.get(CommonTagListComboBox.getSelectedItem());
//		AppNameTextField.setText(template.getAppName());
//		CommonTagListComboBox.setSelectedItem((String)template.getMsgType()); 
//		CommonTagListComboBox.setSelectedItem((String) String.valueOf(template.getIsInput()));
//		templateNameTextField.setText(template.getTemplateName());
		
		List<LFCommonOverwriteTag> listTag = commonOverwriteTagMap.get(commonTagListComboBox.getSelectedItem());
		
		commonTagTableModel.getData().clear();
		//commonTagTableModel.setData(new LinkedHashSet<LFCommonOverwriteTag>());

		
		if (listTag != null ) {
			AppNameTextField.setText(listTag.get(0).getAppName());
			commonTagListNameTextField.setText(listTag.get(0).getCommonOverwriteTagListName());
			
			//set the list of CommonTag to the tableModel of the Tag grid
			Set <LFCommonOverwriteTag> setTag = new HashSet<LFCommonOverwriteTag> ();
			for (LFCommonOverwriteTag tagLocal: listTag) {
				setTag.add(tagLocal);
			}
			if(setTag != null){
				//commonTagTableModel.getData().clear();
				commonTagTableModel.setData(setTag);
				System.out.println("setTag != null");
			}
		}
	}

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {
		saveDialog.setVisible(false);
	}

	private void refreshFromDB(){
		DBUtil.getInstance().getCom().loadAllCommonOverwriteTagFromDB();
		commonOverwriteTagMap = DBUtil.getInstance().getCom().getCommonOverwriteTagMap();
		commonTagListComboBox.setModel(new javax.swing.DefaultComboBoxModel((String[]) commonOverwriteTagMap.keySet().toArray(new String[commonOverwriteTagMap.keySet().size()])));
		//commonTagListComboBox.setSelectedItem(commonTagListNameTextField.getText());
		System.out.println("commonTagListNameTextField.getText()");
	
        commonTagListComboBox.addItem(AutoPilotConstants.ComboBoxEmptyItem);
        commonTagListComboBox.setSelectedItem(AutoPilotConstants.ComboBoxEmptyItem);
        
		commonTagTableModel.getData().clear();
		//commonTagTableModel.setData(new LinkedHashSet<LFCommonOverwriteTag>());
        	
		/*
		List<LFCommonOverwriteTag> listTag = commonOverwriteTagMap.get(commonTagListComboBox.getSelectedItem());
		if (listTag != null ) {
			AppNameTextField.setText(listTag.get(0).getAppName());
			commonTagListNameTextField.setText(listTag.get(0).getCommonOverwriteTagListName());
			
			//set the list of CommonTag to the tableModel of the Tag grid
			Set <LFCommonOverwriteTag> setTag = new HashSet<LFCommonOverwriteTag> ();
			for (LFCommonOverwriteTag tagLocal: listTag) {
				setTag.add(tagLocal);
			}
			if(setTag != null){
				commonTagTableModel.getData().clear();
				commonTagTableModel.setData(setTag);
				System.out.println("setTag != null");
			}
		}
		else {
			System.out.println("listTag == null");
		}
		*/
		
		//initComponents();
		setEditable(false);
		
		
		ApplicationContext.getInputStepPanel().resetCommonTags();
		ApplicationContext.getOutputStepPanel().resetCommonTags();
		ApplicationContext.getTemplatePanel().resetCommonTags();
	}

	private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {
		setEditable(true);
		
		List<LFCommonOverwriteTag> listCommonTag = commonOverwriteTagMap.get(commonTagListComboBox.getSelectedItem());
			
		AppNameTextField.setText(listCommonTag.get(0).getAppName());
		commonTagListNameTextField.setText(listCommonTag.get(0).getCommonOverwriteTagListName());
		
//		msgTypeComboBox.setSelectedItem((String)template.getMsgType()); 
//		msgTemplateTextArea.setText(template.getMsgTemplate());
//		descriptionTextArea.setText(template.getDescription());
	}

	private void setEditable(boolean editable){
		if (editable == false){
			AppNameTextField.setEditable(false);
			commonTagListNameTextField.setEditable(false);
//			msgTemplateTextArea.setEditable(false);
//			descriptionTextArea.setEditable(false);
//			msgTypeComboBox.setEditable(false);
			saveButton.setVisible(false);
			clearButton.setVisible(false);
			addRowButton3.setVisible(false);
			deleteRowButton3.setVisible(false);
			
		}else{
			AppNameTextField.setEditable(true);
			commonTagListNameTextField.setEditable(true);
//			msgTemplateTextArea.setEditable(true);
//			descriptionTextArea.setEditable(true);
//			msgTypeComboBox.setEditable(true);
			saveButton.setVisible(true);
			clearButton.setVisible(true);
			addRowButton3.setVisible(true);
			deleteRowButton3.setVisible(true);
		}
	}
	
	public void tableChanged(TableModelEvent tablemodelevent) {
	}
	
	public boolean isTagEntryExist(String strCommonTagListName, String tagID) {
		List<LFCommonOverwriteTag> listLocal = commonOverwriteTagMap.get(strCommonTagListName);		
		if (listLocal!= null ) {
			for (LFCommonOverwriteTag tagLocal: listLocal) {
				if (tagID.equals(tagLocal.getTagID())) {
					return true;
				}
			}
		}
		
		return false;
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AppNameTextField;
    private javax.swing.JButton addRowButton3;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox commonTagListComboBox;
    private javax.swing.JTextField commonTagListNameTextField;
    private javax.swing.JTable commonTagTable;
    private javax.swing.JButton deleteRowButton3;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel msgLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JDialog saveDialog;
    // End of variables declaration//GEN-END:variables

	//private Map<String, LFTemplate> templateMap = new HashMap<String, LFTemplate>();
	private Map <String, List<LFCommonOverwriteTag> > commonOverwriteTagMap = new TreeMap<String, List<LFCommonOverwriteTag>>();
	private CommonTagTableModel commonTagTableModel;
	private final String saveFailMsg = "ERROR: Save Failed. Please check entry and Logs";

}
